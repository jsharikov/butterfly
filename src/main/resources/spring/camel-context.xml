<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://camel.apache.org/schema/spring
        http://camel.apache.org/schema/spring/camel-spring-2.17.2.xsd">

    <context:property-placeholder location="classpath*:config.properties"/>

    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>

    <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616" />
    </bean>

    <bean id="pooledConnectionFactory"
          class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
        <property name="maxConnections" value="8" />
        <property name="connectionFactory" ref="jmsConnectionFactory" />
    </bean>

    <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="pooledConnectionFactory"/>
        <property name="concurrentConsumers" value="10"/>
    </bean>

    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="configuration" ref="jmsConfig"/>
    </bean>

    <bean id="archiveService" class="com.epam.butterfly.service.ArchiveServiceImpl"/>

    <camelContext  id="camelContext" trace="true" errorHandlerRef="default" xmlns="http://camel.apache.org/schema/spring">

        <errorHandler id="default">
            <redeliveryPolicy maximumRedeliveries="3" redeliveryDelay="1000"/>
        </errorHandler>

        <errorHandler id="DLQ" type="DeadLetterChannel" deadLetterUri="jms:queue:DLQ">
            <redeliveryPolicy maximumRedeliveries="${redeliveries}" redeliveryDelay="2000"/>
        </errorHandler>

        <template id="producerTemplate"/>

        <route id="mainRoute" errorHandlerRef="DLQ">
            <from uri="jms:queue:archive.queue"/>
            <choice>
                <when>
                    <method bean="archiveHelper" method="isExist(${body})"/>
                    <log message="Archive ${body} exist."/>
                    <to uri="jms:queue:archive.output.queue"/>
                    <log message="Archive ${body} send to queue."/>
                </when>
                <otherwise>
                    <to uri="jms:topic:archive.not.found"/>
                    <log message="Archive ${body} send to topic."/>
                </otherwise>
            </choice>
        </route>

        <route>
            <from uri="jms:queue:archive.output.queue"/>
            <to uri="bean:archiveService?method=save(${body})"/>
        </route>
    </camelContext>

</beans>